package com.company;

public interface SomeInterface {
   public int peremennaya = 45 ; /* переменную невозможно сделать private или же не прописать ее значение, по-умолчанию она
   является public static final ( ) */

    void getSomething() /*{}*/ ; //методы интерфейса могут быть только public
    //фигурные скобки будут ошибкой, так как В ИНТЕРФЕЙСЕ НЕЛЬЗЯ РЕАЛИЗОВАТЬ МЕТОД(только описывать),
    // методы  интерфейсов являются абстрактными по-умочанию


    public interface AnotherInterface extends SomeInterface {
        //интерфейс может наследовать другой интерфейс или даже интерфейсЫ (множественное наследие поддерживается)
    }

    public class AnotherClass implements SomeInterface {
        // если класс implements от интерфейса, то в нем обязательно должны быть реализованы все его методы
        @Override
        public void getSomething() {
            System.out.println("что-то");
        }
    }


/*Отличия абстрактных классов:
- в них можно реализовать методы;
- мы можем использовать любые модификаторы доступа к переменным и методам;
- абстрактный класс и класс, который наследуется от него, обязательно связаны
(абстрактный класс - это буд-то множество, а наследуемый -
 подмножество) ;
- так как множественное наследование не поддерживается между классами, любой класс может наследоваться
 только от одного абстрактного класса; */

}
